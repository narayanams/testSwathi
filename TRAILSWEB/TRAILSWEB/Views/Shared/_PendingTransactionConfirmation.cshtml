@* Reusable Confimation View *@
@using System.Diagnostics
@model TRAILSWEB.Models.ProcessPendingTransactionsSuccess

<div id="orderConfimation" class="panel panel-info">

    <div class="panel-body">
        <div>
            <h4>Payment Confirmation # @(Model.IsPayingFromAccount ? "From Account Balance " + Model.AccountBalence.ToString("F") : Model.PaymentConfirmationNumber)</h4>
        </div>
        <div style="border-bottom: 1px solid black;">
            <p style="white-space: pre-line">@Model.ThanksMessage</p>
        </div>

        <div class="" style="border-bottom: 1px solid black;">
            <h4>Order Details</h4>
            <div id="amountBalanceDiv" class="row">
                <label class="col-md-4 col-sm-4 col-xs-5" id="amountBalanceLabel">Account Balance:</label>
                <div class="col-md-8 col-sm-8 col-xs-7">$ @Html.Raw(Model.AccountBalence.ToString("F")) </div>
            </div>
            <div id="amountBalanceDiv2" class="row">
                <label class="col-md-4 col-sm-4 col-xs-5" id="amountBalanceLabel">Total Transaction Amount:</label>
                <div class="col-md-8 col-sm-8 col-xs-7">
                    @if (Model.IsPayingFromAccount)
                    {
                        <span class="payingFromAccountToll">- $ @Html.Raw(Model.TollAmountSelected.ToString("F"))</span>
                    }
                    else
                    {
                        <span class="payingFromPaymentToll">$ @Html.Raw(Model.TollAmountSelected.ToString("F"))</span>
                    }

                </div>
            </div>
            <div id="amountBalanceDiv2" class="row">
                <label class="col-md-4 col-sm-4 col-xs-5" id="amountBalanceLabel">Account Balance After:</label>
                <div class="col-md-8 col-sm-8 col-xs-7">
                    @if (Model.IsPayingFromAccount)
                    {
                        <span class="payingFromAccountToll">$ @Html.Raw((Model.AccountBalence - Model.TollAmountSelected).ToString("F"))</span>
                    }
                    else
                    {
                        <span class="payingFromPaymentToll">$ @Html.Raw((Model.AccountBalence + Model.TollAmountSelected).ToString("F"))</span>
                    }

                </div>
            </div>

            @*@if (!Model.IsPayingFromAccount)
            {
                <a id="printOrderReceiptLink" class="clickable" data-toggle="modal" data-target="#confReceiptModal" style="color: cornflowerblue"><span class="glyphicon glyphicon-print" style="color: cornflowerblue"></span> Print Receipt</a>
            }*@
        </div>


    </div>
</div>

@*This block of code is for receipt printing*@
@if (!(Model.IsPayingFromAccount || Model.TollAmountSelected <= 0))
{
    <div id="confReceiptModal" class="modal fade" role="dialog" aria-labelledby="paymentReceipt">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header primary">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="paymentReceipt">Payment Receipt</h4>
                </div>
                <div class="modal-body">
                    <div class="container-fluid" id="receiptOrderDetail">
                        <div style="text-align: center;">
                            <p>CENTRAL FLORIDA<br />EXPRESSWAY AUTHORITY<br />E-PASS SERVICE CENTER<br />ORLANDO, FL</p>
                        </div>
                        <div style="text-align:center">
                            ******************************
                            <br>CUSTOMER RECEIPT
                            <br>******************************
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-5"><label>E-PASS Account</label></div>
                            <div class="col-sm-7" style="text-align: right">@Html.Raw(Model.AccountNumber)</div>
                        </div>
                        

                        <div class="row">
                            <div class="col-xs-5"><label>Payment Amount</label></div>
                            <div class="col-xs-7" style="text-align: right">@Html.Raw(string.Format("{0:C}", Model.TollAmountSelected))</div>
                        </div>
                        <div class="row">
                            <div class="col-xs-5"><label>Card Type</label></div>
                            <div class="col-xs-7" style="text-align: right">@Html.Raw(Model.Payment.CreditCardType)</div>
                        </div>
                        <div class="row">
                            <div class="col-xs-5"><label>Card Number</label></div>
                            @{
                                var cardNumber = !string.IsNullOrEmpty(Model.Payment.CreditCardNumber) ? Model.Payment.CreditCardNumber.Substring(Model.Payment.CreditCardNumber.Length - 4) : string.Empty;
                            }
                            <div class="col-xs-7" style="text-align: right">@Html.Raw(cardNumber)</div>
                        </div>
                        <div class="row">
                            <div class="col-xs-5"><label>Payment Tracking #</label></div>
                            <div class="col-xs-7" style="text-align: right">@Html.Raw(Model.PaymentConfirmationNumber)</div>
                        </div>
 
                    </div>
                </div>
                <div class="modal-footer default">
                    <button type="button" data-toggle="modal" id="printOrderReceipt" name="printOrderReceipt" class="btn btn-primary"><span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>
                    <button type="button" id="closeButton" class="btn btn-default" data-dismiss="modal">Close</button>

                </div>
            </div>
        </div>
    </div>
                                    }
@if (!(Model.IsPayingFromAccount || Model.TollAmountSelected <= 0))
{
    <script type="text/javascript">
        $(document).ready(function () {
            $(function () {
                $('#printOrderReceipt').on('click', function () {
                    var win = null;
                    var content = $('#receiptOrderDetail');
                    win = window.open("width=200,height=200");
                    self.focus();
                    win.document.open();
                    win.document.write('<' + 'html' + '><' + 'head' + '><' + 'style' + '>');
                    win.document.write('body, td { font-family: Verdana; font-size: 10pt; } pre { overflow-x: auto; white-space: pre-wrap; white-space: -moz-pre-wrap !important; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; background: #fff; }');
                    win.document.write('<' + '/' + 'style' + '><title>E-PASS&reg; Customer Receipt</title><' + '/' + 'head' + '><' + 'body' + '>');
                    win.document.write(content.html());
                    win.document.write('<' + '/' + 'body' + '><' + '/' + 'html' + '>');
                    win.document.close();

                    // Print Page
                    win.print();

                    // Close "Printer Friendly" Page
                    win.close();

                    win.onbeforeunload = function () {
                        console.log('unload');
                    }

                    win.onload = function () {
                        console.log('loading');
                    }
                    //  }
                });


                $('#printOrderReceiptLink').on('click', function () {
                    var win = null;
                    var content = $('#receiptOrderDetail');
                });

            });
        });
    </script>
}

