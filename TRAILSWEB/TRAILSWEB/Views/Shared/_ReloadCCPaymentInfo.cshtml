@* Reusable Card Payment Info Form for Reload and other Independent pages *@
@using TRAILSWEB.Helpers
@model  TRAILSWEB.Models.PaymentInformation
@Html.HiddenFor(m => m.UseCardOnFile)

@if (Model.UseCardOnFile)
{
    var cardNumberDefault = string.Empty;
    if (Model.UseCardOnFile)
    {
        // Mask Number / Token
        cardNumberDefault = (!string.IsNullOrEmpty(Model.CreditCardNumber)) ? "Card ending in " + Model.CreditCardNumber.Substring(Model.CreditCardNumber.Length - 4) : string.Empty;
    }
    else
    {
        // Display entire number as it hasn't been submitted/saved yet
        cardNumberDefault = Model.CreditCardNumber;
    }
    <input type="hidden" id="CreditCardTypeDefault" name="CreditCardTypeDefault" value="@Model.CreditCardType" />
    <input type="hidden" id="NameOnCardDefault" name="NameOnCardDefault" value="@Model.NameOnCard" />
    <input type="hidden" id="CreditCardNumberDefault" name="CreditCardNumberDefault" value="@cardNumberDefault" />
    <input type="hidden" id="hiddenCardNumber" class="hiddenCardNumber" name="hiddenCardNumber" value="@Model.CreditCardNumber" />
    <input type="hidden" id="ExpirationMonthDefault" name="ExpirationMonthDefault" value="@Model.ExpirationMonth" />
    <input type="hidden" id="ExpirationYearDefault" name="ExpirationYearDefault" value="@Model.ExpirationYear" />
    <input type="hidden" id="PaymentAmountDefault" name="PaymentAmountDefault" value="10" />
    <input type="hidden" id="SaveCardOnFileDefault" name="SaveCardOnFileDefault" value="@Model.SaveCardOnFile.ToString()" />
    <input type="hidden" id="AutoReloadDefault" name="AutoReloadDefault" value="@Model.AutoReload.ToString()" />



    <div class="checkbox checkBoxStyle purpleCheckbox" style="padding-bottom:15px">
        <label id="Reload_useCardOnFileSelectionLabel" for="Reload_useCardOnFileSelection" class='active'>
            @Html.CheckBox("Reload_useCardOnFileSelection", Model.UseCardOnFile, new { @name = "useCardOnFileSelection", @style = "display: none", @class = "useCardOnFileSelection" })
            <div class="customCheckbox"></div>
            <!--<i class="fa fa-square fa-2x"></i><i class="fa fa-check-square fa-2x"></i>-->
            <span>
                Use Card on File
            </span>
        </label>
    </div>

}
<div id="cardInformation">
    <div class="form-group" hidden>
        <label for="CreditCardType" class="col-sm-2 control-label">Credit Card Type:</label>
        <div class="col-sm-10">
            @if (Model.UseCardOnFile)
        {
        @Html.HiddenFor(m => m.CreditCardType, new { @class = "CreditCardType" })
        }
        else
        {
        @Html.Hidden("CreditCardType", "", new { @class = "CreditCardType" })
        }
        </div>
    </div>
    <div class="form-group ">
        <div class="col-sm-6 col-xs-11 col1-control form-group">
            <label for="NameOnCard" class="col-sm-12">Name on Card:</label>
            <div class="col-sm-12">
                @if (Model.UseCardOnFile)
            {
            @Html.TextBoxFor(m => m.NameOnCard, new { @class = "form-control textArea", @maxlength = "29", @required = "required", @placeholder = "Name as it appears on your Card", @disabled = "disabled", @pattern = @"[a-zA-Z0-9\s]+" })
            @Html.HiddenFor(m => m.NameOnCard)
        }
        else
        {
            @Html.TextBoxFor(m => m.NameOnCard, new { @class = "form-control textArea", @maxlength = "29", @required = "required", @placeholder = "Name as it appears on your Card", @pattern = @"[a-zA-Z0-9\s]+" })
        }
            </div>

        </div>

        <div class="form-group" hidden>
            <label class="control-label col-sm-4">Credit Card Type:</label>
            <div class="col-sm-8" id="calcCardType" style="margin-top: 8px;">
            </div>
        </div>

        <div class="col-sm-6 col-xs-11 form-group creditCard">
            <label for="CreditCardNumber" class="col-sm-12">Card Number:</label>
            <div class="col-sm-12">
                @{var cardNumber = string.Empty;}
                @if (ViewBag.HasErrors != null)
                {
                    if (ViewBag.HasErrors == true)
                    {
                        if (Model.UseCardOnFile)
                        {
                            // Mask Number / Token
                            cardNumber = (!string.IsNullOrEmpty(Model.CreditCardNumber)) ? "Card ending in " + Model.CreditCardNumber.Substring(Model.CreditCardNumber.Length - 4) : string.Empty; 
                        }
                        else
                        {
                            // Display entire number as it hasn't been submitted/saved yet
                            cardNumber = Model.CreditCardNumber;
                        }
                    }
                }
                else
                {
                    cardNumber = (!string.IsNullOrEmpty(Model.CreditCardNumber)) ? "Card ending in " + Model.CreditCardNumber.Substring(Model.CreditCardNumber.Length - 4) : string.Empty;
                }
                @if (Model.UseCardOnFile)
        {
            @Html.TextBox("CreditCardNumber", Model.CreditCardNumber, new { @class = "form-control show-hide show-first textArea CreditCardNumber", @type = "text", @maxlength = "16", Value = cardNumber, @autocomplete = "off", @placeholder = "Enter your credit card number...", @disabled = "disabled" })
            @Html.HiddenFor(m => m.CreditCardNumber)
            <span class="card_icon"></span>
        }
        else
        {
            @Html.TextBox("CreditCardNumber", Model.CreditCardNumber, new { @class = "form-control show-hide show-first textArea CreditCardNumber", @type = "number", @maxlength = "16", Value = cardNumber, @autocomplete = "off", @placeholder = "Enter your credit card number..." })
            <span class="card_icon"></span>
        }
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div class="col-sm-6 col-xs-11 col1-control form-group">
            <label for="ExpirationMonth" class="col-sm-12">Expiration Month:</label>
            <div class="col-sm-12">

                @if (Model.UseCardOnFile)
            {
                    @Html.DropDownListFor(m => m.ExpirationMonth, Model.ExpirationMonthList, new { @class = "form-control textArea", @disabled = "disabled", @required = "" })
                    @Html.HiddenFor(m => m.ExpirationMonth)
                }
                else
                {
                    @Html.DropDownListFor(m => m.ExpirationMonth, Model.ExpirationMonthList, new { @class = "form-control textArea", @required = "" })
                }


            </div>

        </div>
        <div class="col-sm-6  col-xs-11 form-group">
            <label for="ExpirationYear" class="col-sm-12">Expiration Year:</label>
            <div class="col-sm-12">

                @if (Model.UseCardOnFile)
            {
                    @Html.TextBoxFor(m => m.ExpirationYear, Model.ExpirationYear, new { @name = "ExpirationYear", @class = "form-control fourDigitNumber", @type = "number", @maxlength = "4", @max = 2099, @min = DateTime.Now.Year, @disabled = "disabled", @placeholder = "Enter Year" })
                    @Html.HiddenFor(m => m.ExpirationYear)
                }
                else
                {
                    @Html.TextBoxFor(m => m.ExpirationYear, Model.ExpirationYear, new { @name = "ExpirationYear", @class = "form-control fourDigitNumber", @type = "number", @maxlength = "4", @max = 2099, @min = DateTime.Now.Year, @required = "required" })
                }

            </div>

        </div>

    </div>

</div>