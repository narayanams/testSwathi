
@* Reusable for Payment Data *@
@using System.Runtime.InteropServices
@using TRAILSWEB.Helpers
@model  TRAILSWEB.Models.PaymentInformation

@{
            var isNewCustomer = ViewData["IsNewCustomer"] == null || string.IsNullOrEmpty(ViewData["IsNewCustomer"].ToString()) || ViewData["IsNewCustomer"].ToString() == "False" || ViewData["IsNewCustomer"].ToString() == "false" ? false : true;
            var pageFlow = ViewData["PageFlow"] == null || string.IsNullOrEmpty(ViewData["PageFlow"].ToString()) ? "" : ViewData["PageFlow"].ToString();
            var transponderPrice = Model.TransponderPrice.ToString(); //(Model.TransponderPrice == null || Model.TransponderPrice == 0) ? "0.00" : Model.TransponderPrice.ToString();
            var salesTax = Model.SalesTax.ToString(); //Model.SalesTax.ToString("N2");
            var promotionalDiscount = "0";

            var ReloadAndPayment = ViewData["ReloadAndPayment"].ToString();
            var SaveCardFeature = ViewData["SaveCardFeature"].ToString();
            var controlInit = ViewData["PageSource"] == null || string.IsNullOrEmpty(ViewData["PageSource"].ToString()) ? "" : ViewData["PageSource"].ToString();
            //Let controller decides about Prepaid Tolls amount
            //if (isNewCustomer && pageFlow == "Activate")
            //{
            Model.PrepaidTollsAmount = 10;
        @*}
    else
    {
        Model.PrepaidTollsAmount = 0;
    }*@

    var webBalance = String.Format("{0}", Math.Abs(Model.WebBalance));

    }
<div class="noShowOnPreviewSummaryPopup purchasePayableData">
<div class="activatePayableInfo">
    <div class="form-group">
        <label for="TransponderPrice" class="col-sm-3 col-xs-6">Transponder Cost:</label>
        <div class="col-sm-3 col-xs-4 text-right">
            <span>$</span>
            <span id="lblTransponderPrice">@transponderPrice</span>
        </div>
    </div>

    <div class="clearfix"></div>
    @if (Model.PromotionInfo.IsPromotionActive && (!(pageFlow == "Activate")))
    {
    <div class="form-group CouponCode" >
        <label for="TransponderPrice" class="col-sm-3 col-xs-6">Promotion Discount:</label>
        <div class="col-sm-3 col-xs-4 text-right">
            <span>$</span>
            <span id="lblTotalDiscount">@promotionalDiscount</span>
        </div>
    </div>
    <div class="clearfix"></div>
    }
    <div class="form-group">
        <label for="SalesTax" class="col-sm-3 col-xs-6">Tax:</label>
        <div class="col-sm-3 col-xs-4 text-right">
            <span>$</span>
            <span id="lblSalesTax">@salesTax</span>
        </div>
    </div>
    <div class="clearfix"></div>
    </div>
    @if (Model.IsPaymentRequired && Model.WebBalance < 0)
    {
        <div class="form-group">
            <label for="TransponderPrice" class="col-sm-3 col-xs-6">Minimum Toll:</label>
            <div class="col-sm-3 col-xs-4 text-right">
                <span>$</span>
                <span id="minimumToll">@String.Format("{0}", Math.Abs(Model.WebBalance)) </span>
            </div>
            <div class="col-sm-1 col-xs-1">
                <a id="minimumPayment" class="help minimumPayment" rel="popover" data-toggle="popover" data-content="" minimumTollAmount="@webBalance"  style="color:#337ab7;">
                    <i class="material-icons">help</i>
                </a>
            </div>
        </div>
    }
    <div class="clearfix"></div>
    <div class="activatePayableInfo">
        <div class="form-group">
            <label for="TransponderPrice" class="col-sm-3 col-xs-6">Sub Total:</label>
            <div class="col-sm-3 col-xs-4 text-right">
                    @{var absoluteWebBalance = (Model.IsPaymentRequired ? Math.Abs(Model.WebBalance) : 0);}
                @{
                    var subTotal = String.Format("{0}", (Model.TransponderPrice + (Double)Model.SalesTax) + absoluteWebBalance);
                    subTotal = (subTotal == "0") ? "0.00" : subTotal.ToString();
                    
                    
                    }
                    <span>$</span>
                    <span id="subTotal">@subTotal</span>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="clearfix"></div>

    <div class="form-group">
        <label for="PrepaidTollsAmount" class="col-sm-12 col-xs-12">Prepaid Tolls:</label>
        <div class="col-sm-6 col-xs-12">
            <div class="input-group">
                @*<span class="input-group-addon success">$</span>*@
                @*@{ Model.PrepaidTollsAmount = (Model.PrepaidTollsAmount == 0) ? 0.00 : Convert.ToDouble(Model.PrepaidTollsAmount); }*@
                @Html.TextBoxFor(m => m.PrepaidTollsAmount, new { @class = "form-control always-enable update-cart-item prepaidTollsAmount", @type = "number", @min = Model.MinimumPrepaidTolls, @max = "10000", @maxlength = "7", @step = "any", Value = Model.PrepaidTollsAmount, @aria_label = "Amount (to nearest dollar)", @placeholder = "Amount (to nearest dollar)" })
                <a id="paymentAmountHelp" class="input-group-addon info help paymentAmountHelp" rel="popover" data-toggle="popover" data-content="" style="border:none;background:none;color:#337ab7;">
                    <i class="material-icons">help</i>
                </a>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    @if (Model.PromotionInfo.IsPromotionActive && (!(pageFlow == "Activate")))
    {
        <div class="form-group CouponCode">
            <label for="CreditCardNumber" class="col-sm-12 ">Coupon Code:</label>
            <div class="col-sm-6 col-xs-12">
                <div class="input-group">
                    @Html.TextBox("CouponCode", Model.PromotionInfo.CouponCode, new { @class = "form-control show-hide show-first textArea CouponCode", @type = "text", @maxlength = "10", @minlength = "5", @autocomplete = "off", @placeholder = "Enter your Coupon Code...", @IsValidated = "false" })

                    <a id="promotionHelp" class="input-group-addon info help promotionHelp" rel="popover" data-toggle="popover" data-content="" style="border:none;background:none;color:#337ab7;">
                        <i class="material-icons">help</i>
                    </a>

                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-sm-6" >
                <div class="col-sm-7 col-xs-12"  >
                    <span id="invalidCouponLabel" class="onScreenErrors" style="display:none"></span>
                </div>
                <div class="col-sm-5 col-xs-12 notPullRightOnMobile"> <button type="button" id="applyPromoCoupon" name="applyPromoCoupon" class="btn btn-info" style="margin-top: 5px; margin-right: 45px;">Apply Coupon</button>
                </div>
            </div>
        </div>
    }
    <div class="clearfix"></div>
    </div>
                   
@{var displaySaveCard = (Model.UseCardOnFile == true) ? "none" : "block";}

    <div class="checkbox CCPayment checkBoxStyle purpleCheckbox" id="saveCardOnFileOptionDiv" style="display: @displaySaveCard">
        <label id="saveCardOnFileOptionLabel" for='@(controlInit + "SaveCardOnFile")' class='active'>
            @Html.CheckBox(controlInit + "SaveCardOnFile", Model.SaveCardOnFile, new { @style = "display: none", @class = "SaveCardOnFile" })
            <div class="customCheckbox"></div>
            <!--<i class="fa fa-square fa-2x"></i><i class="fa fa-check-square fa-2x"></i>-->
            <span>
                Save Card for future use
            </span>
        </label>
    </div>

<div class="clearfix"></div>

<div class="checkbox CCPayment checkBoxStyle purpleCheckbox">
    <label id="AutoReloadLabel" for='@(controlInit + "AutoReload")' class='active'>
        @Html.CheckBox(controlInit + "AutoReload", Model.AutoReload, new { @style = "display: none", @class = "AutoReload" })
        <div class="customCheckbox"></div>
        <!--<i class="fa fa-square fa-2x"></i><i class="fa fa-check-square fa-2x"></i>-->
        <span>
            Allow automatic billing 
        </span>
    </label>
    
    <a id="automaticBillingHelp" class="info help" rel="popover" data-toggle="popover" title="" data-content="" style="padding-top:5px; color:#337ab7">
        <i class="material-icons">help</i>
    </a>   
    <br />
    <br />    
    <div class="row nomargin col-sm-8 col-xs-8 hidden" id="divReplenishAmount">
        <div>
            <div class="form-group row" id="repAmountRow" style="display: block;">
                <label class="col-sm-12 col-xs-12">Replenish Amount:</label>
                <div class="col-sm-12 nomargin" style="margin-top: 8px;">
                    <div class="col-sm-4 col-xs-12 nomargin">
                        <div class="input-group">
                            <input name="paymentRepAmount" type="number" class="form-control" value="" id="paymentRepAmount" aria-required="true" aria-invalid="false">                           
                        </div>
                    </div>
                    <label class="col-sm-8 col-xs-12">
                        Minimum Amount: <span id="lblMinReplAmt"></span>
                    </label>
                </div>
            </div>
            <div class="form-group row" id="lowAmountRow" style="display: block;">
                <label class="col-sm-12 col-xs-12">Low Balance Amount:</label>
                <div class="col-sm-12 nomargin" style="margin-top: 8px;">
                    <div class="col-sm-4 col-xs-12 nomargin">
                        <div class="input-group">
                            <input name="paymentLowAmount" type="number" class="form-control" value="" id="paymentLowAmount" aria-required="true">
                            <input type="hidden" value="130 == &quot;0&quot; || 130 == &quot;&quot;? 130 : 130" id="paymentLowAmountOrig">
                        </div>
                    </div>
                    <label class="col-sm-8 col-xs-12">
                        Minimum Amount: <span id="lblMinLowBalAmt"></span>
                    </label>
                </div>
            </div>
            <div class="form-group" id="lowAmountRowNo" style="display: none;">
                <label class="col-sm-4" style="width:auto;">Low Balance Amount: <span id="lblLowBalAmt"></span></label>
            </div>
        </div>
    </div> 
    </div>

<div class="clearfix"></div>

<div class="form-group noShowOnPreviewSummaryPopup" style="margin-top: 15px">
    @{var paymentAmountLabel = Model.TransponderPrice != null ? "Grand Total" : "Amount";}
    @{
        var paymentAmount = String.Format("{0}", Convert.ToDouble(Model.TransponderPrice + (Double)Model.SalesTax + absoluteWebBalance + Model.PrepaidTollsAmount));
        paymentAmount = (paymentAmount == "0") ? "0.00" : paymentAmount.ToString();
    }
    <label for="PaymentAmount" class="col-sm-4 col-xs-4">@paymentAmountLabel:</label>
    <div class="col-sm-8 col-xs-8">
        <div class="input-group">
            <input type="hidden" id="AbsoluteWebBalance" name="AbsoluteWebBalance" value="@absoluteWebBalance" />
            @{Model.PaymentAmount = Convert.ToDouble(Model.TransponderPrice + (Double)Model.SalesTax + absoluteWebBalance + Model.PrepaidTollsAmount);}
            @Html.HiddenFor(m => m.WebBalance)
            <span class="FinalPayableAmount" id="paymentAmountLabel">$@paymentAmount</span>
        </div>
    </div>
</div>

