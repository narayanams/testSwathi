@model TRAILSWEB.Models.Customer

@{
    ViewBag.Title = "Reload E-PASS";
    ViewBag.Tagline = "Add funds to your existing E-PASS account by using your credit/debit card or bank payment.";
 }

@using (Html.BeginForm("Payment", "Sales", FormMethod.Post, new { @class = "form-horizontal", @role = "form", @id = "paymentForm" }))
{
    @Html.AntiForgeryToken()
    @Html.Partial("_AccountSummary", Model)

    
    <div class="panel panel-info">
        <div class="panel-heading">
            <h3 class="panel-title">Payment Information</h3>
        </div>
        <div class="panel-body">
            @if (!ViewData.ModelState.IsValid)
            {
            <div class="alert alert-danger">					
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                @Html.ValidationSummary()
            </div>
            }
            @if (!string.IsNullOrEmpty(Model.WarningMessage))
            {
                <div class="alert alert-warning">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    @Html.Raw(Model.WarningMessage)
                </div>
            }
            

            @Html.Partial("_ReloadSalesCardPaymentInfo", Model.PaymentInfo, new ViewDataDictionary(this.ViewData) { { "PageSource", "Reload_" }, { "AccountType", Model.AccountType } })
        </div>
        <div class="panel-footer">
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    @if (Model.PaymentInfo.PaymentWarningInfo != null && (Model.PaymentInfo.PaymentWarningInfo.CCWarningCode == "D"))
                    {
                        <button type="button" disabled="disabled" id="submitPayment" class="btn btn-success bootStrapButton pull-right ReloadSubmitButton">Submit</button>
                    }
                    else
                    {
                        <button type="button" id="submitPayment" class="btn btn-success bootStrapButton pull-right ReloadSubmitButton">Submit</button>
                    }
                </div>
            </div>
        </div>
    </div>
}

<div id="confirmationModal" class="modal fade" role="dialog" aria-labelledby="confirmationTitle">
    <div class="modal-dialog">
            <div class="modal-content ">
                <div class="modal-header primary default">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="confirmationTitle">Payment Confirmation</h4>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <p><span id="confirmationMessage" /></p>
                        <p>Do you wish to continue? Please confirm.</p>
                    </div>
                </div>
                <div class="modal-footer default">
                    <button type="button" id="yesButton" class="btn btn-success" data-dismiss="modal">Yes</button>
                    <button type="button" id="noButton" class="btn btn-danger" data-dismiss="modal">No</button>
                </div>
            </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
        var creditCardTypeDefault = '@Model.PaymentInfo.CreditCardType';
        var creditCardNumberDefault = '@Model.PaymentInfo.CreditCardNumber';
        var nameOnCardDefault = '@Model.PaymentInfo.NameOnCard';
        var expirationMonthDefault = '@Model.PaymentInfo.ExpirationMonth';
        var expirationYearDefault = '@Model.PaymentInfo.ExpirationYear';
        var paymentAmountDefault = 10;
        var saveCardOnFileDefault = '@Model.PaymentInfo.SaveCardOnFile.ToString()';
        var autoReloadDefault = '@Model.PaymentInfo.AutoReload.ToString()';
    </script>
    <script src="~/Scripts/controllers/sales/paymentController.js"></script>

    @if (Model.PaymentInfo.WebBalance < 0)
    {
        <script> paymentController.SetWebBalance(@Model.PaymentInfo.WebBalance) </script>
    }

    <script>
        $(document).ready(function() {
            paymentController.DoCCPayment('@Model.PaymentInfo.IsCCPayment' == 'True')
            @*@Model.PaymentInfo.IsCCPayment ? paymentController.DoCCPayment(true) : paymentController.DoCCPayment(false)*@


            $('#AutoReload').click(function(event) {
                //debugger;
                var url = window.location.pathname;

                var checked = $('#AutoReload').is(":checked");

                var paymentDiv;
                paymentDiv = $(event.target).closest(".transponderBodyPanel"); //.find("#paymentRepAmount")

                if (checked)
                    $("#divReplenishAmount").removeClass("hidden");
                else
                    $("#divReplenishAmount").addClass("hidden");

            });
        });

        if ('@Model.PaymentInfo.AutoReload' == 'True') {
            $("#divReplenishAmount").removeClass("hidden");
        }

    </script>

    <script>
        //Below script is very important to hide Checkbox of SaveCard of Payment Info
        var displaySaveCard = ('@Model.PaymentInfo.UseCardOnFile' == 'True' || '@Model.PaymentInfo.UseCardOnFile' ==
            'true')
        ? "none"
        : "block";
        //displaySaveCard = displaySaveCard + " !important";
        $(document).ready(function() {
            displaySaveCard == "none" ? $('#saveCardOnFileOptionDiv').hide() : $('#saveCardOnFileOptionDiv').show();

            $('a[data-toggle="tab"]').on('shown.bs.tab',
                function(e) {
                    var target = $(e.target).attr("id") // activated tab
                    if (target == 'ccTab') {
                        shoppingCartController.DoCCPayment(true);
                        $('#NameOnCard').focus();
                        if ($('#ccpayWarningIndicator').val() == "D") {
                            $('.ReloadSubmitButton').prop('disabled', true);
                        } else {
                            $('.ReloadSubmitButton').prop('disabled', false);
                        }
                    } else if (target == 'achTab') {
                        shoppingCartController.DoCCPayment(false);
                        $('#AccountHolderFirstName').focus();
                        if ($('#achpayWarningIndicator').val() == "D") {
                            $('.ReloadSubmitButton').prop('disabled', true);
                        } else {
                            $('.ReloadSubmitButton').prop('disabled', false);
                        }
                    }
                });


        });
    </script>

}


